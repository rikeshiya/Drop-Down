{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingNinjas\\\\SKILL TEST\\\\dropdown-main\\\\dropdown-main\\\\src\\\\Components\\\\Dropdown.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport './Dropdown.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = () => {\n  _s();\n  // item data store\n\n  const item = [{\n    select: \"select\",\n    Yes: \"Yes\",\n    No: \"Probably Not\"\n  }];\n  // useState Hook \n  const [name, setName] = useState();\n  // onChange event\n  const changeHandler = e => {\n    setName(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Q.Should you use a dropdown?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: name,\n        onChange: changeHandler,\n        children: item.map(value => {\n          console.log(value);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: value.select\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: value.Yes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: value.No\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n};\n_s(Dropdown, \"tM2YBx9dq0pEEL4vxUK9iLbk07s=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["useState","Dropdown","item","select","Yes","No","name","setName","changeHandler","e","target","value","map","console","log"],"sources":["C:/codingNinjas/SKILL TEST/dropdown-main/dropdown-main/src/Components/Dropdown.js"],"sourcesContent":["import { useState } from \"react\";\nimport './Dropdown.css'\nconst Dropdown =()=>{\n\n    // item data store\n\n    const item =[\n                    {\n                    select:\"select\",\n                    Yes:\"Yes\",\n                    No:\"Probably Not\"\n                    }\n                ]\n                // useState Hook \n                const [name,setName] =useState()\n                // onChange event\n                const changeHandler =(e)=>{\n                    setName(e.target.value)\n                }\n    return(\n        <>\n        {/* dropdown container */}\n\n             <div className=\"dropdown-container\">\n                {/*  dropdown Heading */}\n                <h1>Q.Should you use a dropdown?</h1>\n            <select value={name} onChange={changeHandler}>\n                {\n                    item.map((value)=>{\n                      console.log(value);\n                     return (\n                        <>\n                                <option>{value.select}</option>  \n                                <option>{value.Yes}</option>\n                                <option>{value.No}</option>\n                        </>\n                        )\n                    })\n                }\n                    \n            </select>\n            <div>\n                {/* change state name on hook method */}\n                <h1>{name}</h1> \n            </div> \n            </div> \n             \n        </>\n    )\n}\nexport default Dropdown"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,gBAAgB;AAAA;AAAA;AACvB,MAAMC,QAAQ,GAAE,MAAI;EAAA;EAEhB;;EAEA,MAAMC,IAAI,GAAE,CACI;IACAC,MAAM,EAAC,QAAQ;IACfC,GAAG,EAAC,KAAK;IACTC,EAAE,EAAC;EACH,CAAC,CACJ;EACD;EACA,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAEP,QAAQ,EAAE;EAChC;EACA,MAAMQ,aAAa,GAAGC,CAAC,IAAG;IACtBF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EACb,oBACI;IAAA,uBAGK;MAAK,SAAS,EAAC,oBAAoB;MAAA,wBAEhC;QAAA,UAAI;MAA4B;QAAA;QAAA;QAAA;MAAA,QAAK,eACzC;QAAQ,KAAK,EAAEL,IAAK;QAAC,QAAQ,EAAEE,aAAc;QAAA,UAErCN,IAAI,CAACU,GAAG,CAAED,KAAK,IAAG;UAChBE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;UACnB,oBACG;YAAA,wBACQ;cAAA,UAASA,KAAK,CAACR;YAAM;cAAA;cAAA;cAAA;YAAA,QAAU,eAC/B;cAAA,UAASQ,KAAK,CAACP;YAAG;cAAA;cAAA;cAAA;YAAA,QAAU,eAC5B;cAAA,UAASO,KAAK,CAACN;YAAE;cAAA;cAAA;cAAA;YAAA,QAAU;UAAA,gBAChC;QAEP,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAGD,eACT;QAAA,uBAEI;UAAA,UAAKC;QAAI;UAAA;UAAA;UAAA;QAAA;MAAM;QAAA;QAAA;QAAA;MAAA,QACb;IAAA;MAAA;MAAA;MAAA;IAAA;EACA,iBAEP;AAEX,CAAC;AAAA,GA/CKL,QAAQ;AAAA,KAARA,QAAQ;AAgDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}